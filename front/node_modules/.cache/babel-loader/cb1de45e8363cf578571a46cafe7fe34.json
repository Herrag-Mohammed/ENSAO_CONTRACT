{"remainingRequest":"/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js!/Users/mohammedherrag/projet_PFA/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/mohammedherrag/projet_PFA/front/src/lib/BlckchnAntProver.js","dependencies":[{"path":"/Users/mohammedherrag/projet_PFA/front/src/lib/BlckchnAntProver.js","mtime":1624915905877},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/mohammedherrag/projet_PFA/front/src/lib/BlckchnAntProver.js"],"names":["Web3","jsSHA","compiledBlckchnAntProver","contractAbi","abi","networks","web3","undefined","contract","contractAddress","hashAddedSubscription","hashAddedCallback","getAccounts","eth","getCurrentProvider","currentProvider","getContractAddress","getNetworkId","networkVersion","_network","etherscanBaseUrl","n","eventsSupported","initContract","clearSubscriptions","address","console","log","Contract","events","HashAdded","error","t","baseUrl","transactionUrl","transactionHash","data","date","Date","toLocaleString","transaction","hash","returnValues","comment","from","init","allowGanache","_hashAddedCallback","window","ethereum","enable","autoRefreshOnNetworkChange","on","then","providers","HttpProvider","readUploadedFileAsText","fileInput","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsArrayBuffer","calculateHashFromBytes","shaObj","update","getHash","calculateHashFromFile","file","fileContent","getTransaction","callback","getTransactionReceipt","sendHash","accounts","methods","addDocHash","send","tx","findHash","utils","isHexStrict","hexToBytes","length","findDocHash","call","i","mineTime","block","sender","resultObj","hashcode","size","list","listBySender"],"mappings":"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","sourcesContent":["import Web3 from 'web3'\nimport jsSHA from 'jssha'\n// TODO Améliorer ce référencement\nimport compiledBlckchnAntProver from '../../../smart_contract/build/contracts/AntProver.json'\nconst contractAbi = compiledBlckchnAntProver.abi\nconst networks = compiledBlckchnAntProver.networks\n\nlet web3 = undefined\nlet contract = undefined\nlet contractAddress = undefined\n\nlet hashAddedSubscription = undefined\nlet hashAddedCallback = undefined\n\nconst getAccounts = () => {\n    // TODO\n    return web3.eth.getAccounts()\n}\nconst getCurrentProvider = () => {\n    return web3 ? web3.currentProvider : null\n}\nconst getContractAddress = () => {\n    return contractAddress\n}\nconst getNetworkId = () => {\n    return web3 && web3.currentProvider ?\n    web3.currentProvider.networkVersion || web3.currentProvider._network\n    : null\n}\nconst etherscanBaseUrl = () => {\n    let n = getNetworkId()\n    if (n == 1) {\n        return 'https://etherscan.io'\n    } else if (n == 3) {\n        return 'https://ropsten.etherscan.io'\n    } else if (n == 5) {\n        return 'https://goerli.etherscan.io'\n    } else if (n == 42) {\n        return 'https://kovan.etherscan.io'\n    }\n    return null\n}\n\nconst eventsSupported = () => {\n    return getNetworkId()\n}\n\nconst initContract = () => {\n    if (hashAddedSubscription) {\n        // TODO cibler l'unsuscribe\n        web3.eth.clearSubscriptions()\n    }\n    // 5777 par défaut (cas dans un navigateur privé avec Ganache)\n    contractAddress = networks[getNetworkId() || 5777].address\n    console.log('contract address', contractAddress)\n    contract = new web3.eth.Contract(contractAbi, contractAddress)\n\n    if (!eventsSupported()) {\n        console.log('provider does not support event listening')\n        return;\n    }\n    hashAddedSubscription = contract.events.HashAdded((error, t) => {\n        if (error) {\n            console.log('HashAdded : error', error)\n            return;\n        }\n        console.log('HashAdded', t)\n        if (hashAddedCallback) {\n            let baseUrl = etherscanBaseUrl()\n            let transactionUrl = baseUrl && t.transactionHash  ? baseUrl + '/tx/' + t.transactionHash : null\n            let data = {\n                date: new Date().toLocaleString(),\n                contract : t.address,\n                transaction: t.transactionHash,\n                transactionUrl: transactionUrl,\n                data: {\n                    hash: t.returnValues.hash, comment : t.returnValues.comment, from: t.returnValues.from\n                }\n            }\n            hashAddedCallback(data)\n        }\n    });\n}\n\nconst init = async (allowGanache, _hashAddedCallback) => {\n    hashAddedCallback = _hashAddedCallback\n    if (window.ethereum) {\n        console.log('window.ethereum (modern dapp browser)')\n        web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            // Acccounts now exposed\n            initContract()\n\n            // Ecoute changement de network (fonctionnement 30/09/2019 : reload)\n            window.ethereum.autoRefreshOnNetworkChange = false\n            window.ethereum.on('networkChanged', initContract)\n        } catch (error) {\n            console.log('User denied account access or network is not accessible...')\n        }\n    } else if (window.web3) {\n        console.log('window.web3 (legacy dapp browser)')\n        web3 = new Web3(web3.currentProvider);\n        // Acccounts always exposed\n        web3.eth.getAccounts().then(console.log)\n        initContract()\n    } else {\n        console.log('ganache (non dapp browser)')\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        // fallback to Ganache.\n        if (allowGanache) {\n            web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:7545'));\n            initContract()\n        } else {\n            console.log('Metamask est indispensable !')\n        }\n    }\n}\n\nconst readUploadedFileAsText = (fileInput) => {\n    const temporaryFileReader = new FileReader()\n    return new Promise((resolve, reject) => {\n        temporaryFileReader.onerror = () => {\n            temporaryFileReader.abort()\n            reject(new DOMException(\"Problem parsing input file.\"))\n        }\n        temporaryFileReader.onload = () => {\n            resolve(temporaryFileReader.result)\n        }\n        temporaryFileReader.readAsArrayBuffer(fileInput)\n    });\n}\n\nconst calculateHashFromBytes = (data) => {\n    let shaObj = new jsSHA(\"SHA-256\", \"ARRAYBUFFER\")\n    shaObj.update(data)\n    let hash = \"0x\" + shaObj.getHash(\"HEX\")\n    return hash\n}\n\n\nconst calculateHashFromFile = async (file) => {\n    const fileContent = await readUploadedFileAsText(file)\n    return calculateHashFromBytes(fileContent)\n}\n\nconst getTransaction = (transactionHash, callback) => {\n    web3.eth.getTransaction(transactionHash, callback)\n}\n\nconst getTransactionReceipt = (transactionHash, callback) => {\n    web3.eth.getTransactionReceipt(transactionHash, callback)\n}\n\nconst sendHash = (hash, comment, callback) => {\n    web3.eth.getAccounts((error, accounts) => {\n        contract.methods.addDocHash(hash, comment).send({\n            from: accounts[0]\n        }, (error, tx) => {\n            if (error) {\n                callback(error, null)\n            } else {\n                callback(null, tx)\n            }\n        })\n    })\n}\n\nconst findHash = (hash, callback) => {\n    if (!(web3.utils.isHexStrict(hash) && web3.utils.hexToBytes(hash).length == 32)) {\n        callback('Hashcode non valide', null)\n        return\n    }\n    contract.methods.findDocHash(hash).call((error, result) => {\n        if (error) {\n            callback(error, null)\n        } else {\n            let i = 0\n            let mineTime = new Date(result[i++] * 1000)\n            let block = result[i++]\n            let sender = result[i++]\n            let comment = result[i++]\n            let resultObj = {\n                hashcode: hash,\n                comment,\n                sender,\n                block,\n                mineTime\n            }\n            callback(null, resultObj)\n        }\n    });\n}\n\nconst size = (callback) => {\n    contract.methods.size().call((error, result) => {\n        if (error) {\n            callback(error, null)\n        } else {\n            callback(null, result)\n        }\n    });\n}\n\nconst list = (callback) => {\n    contract.methods.list().call((error, result) => {\n        if (error) {\n            callback(error, null)\n        } else {\n            callback(null, result)\n        }\n    });\n}\n\nconst listBySender = (sender, callback) => {\n    contract.methods.listBySender(sender).call((error, result) => {\n        if (error) {\n            callback(error, null)\n        } else {\n            callback(null, result)\n        }\n    });\n}\n\nexport default {\n    findHash,\n    sendHash,\n    size,\n    list,\n    listBySender,\n    //\n    init,\n    getCurrentProvider,\n    getNetworkId,\n    getContractAddress,\n    getAccounts,\n    getTransactionReceipt,\n    getTransaction,\n    etherscanBaseUrl,\n    //\n    calculateHashFromFile,\n    calculateHashFromBytes\n}\n"]}]}