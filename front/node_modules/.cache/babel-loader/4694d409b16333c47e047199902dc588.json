{"remainingRequest":"/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js!/Users/mohammedherrag/projet_PFA/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/mohammedherrag/projet_PFA/front/src/store/mutations.js","dependencies":[{"path":"/Users/mohammedherrag/projet_PFA/front/src/store/mutations.js","mtime":1624550253545},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvbW9oYW1tZWRoZXJyYWcvcHJvamV0X1BGQS9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9tdXRhdGlvbnM7CgppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4vbXV0YXRpb24tdHlwZXMnOwpleHBvcnQgdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCB0eXBlcy5TRVRfUFJPVklERVIsIGZ1bmN0aW9uIChzdGF0ZSwgcHJvdmlkZXIpIHsKICBzdGF0ZS5wcm92aWRlciA9IHByb3ZpZGVyOwogIHN0YXRlLnByb3ZpZGVyVHlwZSA9IHN0YXRlLnByb3ZpZGVyLmlzTWV0YU1hc2sgPyAnbWV0YW1hc2snIDogJ2h0dHAnOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLlNFVF9DT05UUkFDVF9BRERSRVNTLCBmdW5jdGlvbiAoc3RhdGUsIGNvbnRyYWN0QWRkcmVzcykgewogIHN0YXRlLmNvbnRyYWN0QWRkcmVzcyA9IGNvbnRyYWN0QWRkcmVzczsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCB0eXBlcy5BRERfTkVXX0VWRU5ULCBmdW5jdGlvbiAoc3RhdGUsIGV2ZW50RGF0YSkgewogIHN0YXRlLm5ld0V2ZW50cy5zbGljZShNYXRoLm1heChzdGF0ZS5uZXdFdmVudHMubGVuZ3RoIC0gOSwgMSkpOwogIHN0YXRlLm5ld0V2ZW50cy5wdXNoKGV2ZW50RGF0YSk7Cn0pLCBfbXV0YXRpb25zKTs="},{"version":3,"sources":["/Users/mohammedherrag/projet_PFA/front/src/store/mutations.js"],"names":["types","mutations","SET_PROVIDER","state","provider","providerType","isMetaMask","SET_CONTRACT_ADDRESS","contractAddress","ADD_NEW_EVENT","eventData","newEvents","slice","Math","max","length","push"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,OAAO,IAAMC,SAAS,iDACnBD,KAAK,CAACE,YADa,YACCC,KADD,EACQC,QADR,EACkB;AACpCD,EAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACAD,EAAAA,KAAK,CAACE,YAAN,GAAqBF,KAAK,CAACC,QAAN,CAAeE,UAAf,GAA4B,UAA5B,GAAyC,MAA9D;AACD,CAJmB,+BAKnBN,KAAK,CAACO,oBALa,YAKSJ,KALT,EAKgBK,eALhB,EAKiC;AACnDL,EAAAA,KAAK,CAACK,eAAN,GAAwBA,eAAxB;AACD,CAPmB,+BAQnBR,KAAK,CAACS,aARa,YAQEN,KARF,EAQSO,SART,EAQoB;AACtCP,EAAAA,KAAK,CAACQ,SAAN,CAAgBC,KAAhB,CAAsBC,IAAI,CAACC,GAAL,CAASX,KAAK,CAACQ,SAAN,CAAgBI,MAAhB,GAAyB,CAAlC,EAAqC,CAArC,CAAtB;AACAZ,EAAAA,KAAK,CAACQ,SAAN,CAAgBK,IAAhB,CAAqBN,SAArB;AACD,CAXmB,cAAf","sourcesContent":["import * as types from './mutation-types'\n\nexport const mutations = {\n  [types.SET_PROVIDER](state, provider) {\n    state.provider = provider\n    state.providerType = state.provider.isMetaMask ? 'metamask' : 'http'\n  },\n  [types.SET_CONTRACT_ADDRESS](state, contractAddress) {\n    state.contractAddress = contractAddress\n  },\n  [types.ADD_NEW_EVENT](state, eventData) {\n    state.newEvents.slice(Math.max(state.newEvents.length - 9, 1))\n    state.newEvents.push(eventData)\n  }\n}\n"]}]}