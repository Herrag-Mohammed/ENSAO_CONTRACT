{"remainingRequest":"/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js!/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mohammedherrag/projet_PFA/front/src/components/Check.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mohammedherrag/projet_PFA/front/src/components/Check.vue","mtime":1624550253543},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tb2hhbW1lZGhlcnJhZy9wcm9qZXRfUEZBL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQmxja2NobkFudFByb3ZlciBmcm9tICcuLi9saWIvQmxja2NobkFudFByb3Zlci5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ2hlY2snLAogIHByb3BzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29tcHV0aW5nOiBmYWxzZSwKICAgICAgZmlsZTogbnVsbCwKICAgICAgZm9ybTogewogICAgICAgIGhhc2hjb2RlOiBudWxsCiAgICAgIH0sCiAgICAgIGluZm86IG51bGwsCiAgICAgIGVycm9yOiBudWxsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG5lZWRNZXRhbWFzazogZnVuY3Rpb24gbmVlZE1ldGFtYXNrKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucHJvdmlkZXJUeXBlID09PSBmYWxzZSA/ICdWZXVpbGxleiBpbnN0YWxsZXIgTWV0YW1hc2snIDogbnVsbDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbGVDaG9zZW46IGZ1bmN0aW9uIGZpbGVDaG9zZW4oZXZ0KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLmZvcm0uaGFzaGNvZGUgPSAnJzsKICAgICAgICAgICAgICAgIF90aGlzLmNvbXB1dGluZyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBCbGNrY2huQW50UHJvdmVyLmNhbGN1bGF0ZUhhc2hGcm9tRmlsZShldnQudGFyZ2V0LmZpbGVzWzBdKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX3RoaXMuZm9ybS5oYXNoY29kZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy5jb21wdXRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGhhc2hjb2RlQ2hhbmdlOiBmdW5jdGlvbiBoYXNoY29kZUNoYW5nZShldnQpIHsKICAgICAgY29uc29sZS5sb2coJ2hhc2hjb2RlQ2hhbmdlJywgZXZ0KTsKICAgIH0sCiAgICBvblN1Ym1pdDogZnVuY3Rpb24gb25TdWJtaXQoZXZ0KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIGNvbnNvbGUubG9nKCdjaGVjaycsIHRoaXMuZm9ybS5oYXNoY29kZSk7CiAgICAgIHRoaXMuaW5mbyA9IG51bGw7CiAgICAgIHRoaXMuZXJyb3IgPSBudWxsOwogICAgICBCbGNrY2huQW50UHJvdmVyLmZpbmRIYXNoKHRoaXMuZm9ybS5oYXNoY29kZSwgZnVuY3Rpb24gKGVycm9yLCByZXN1bHQpIHsKICAgICAgICBjb25zb2xlLmxvZygncmVzdWx0JywgZXJyb3IsIHJlc3VsdCk7CgogICAgICAgIGlmIChlcnJvcikgewogICAgICAgICAgX3RoaXMyLmVycm9yID0gZXJyb3I7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi5pbmZvID0gcmVzdWx0OwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZmlsZU5hbWVGb3JtYXR0ZXI6IGZ1bmN0aW9uIGZpbGVOYW1lRm9ybWF0dGVyKGZpbGVzKSB7CiAgICAgIHZhciBtYXggPSAzMDsKICAgICAgcmV0dXJuIGZpbGVzWzBdLm5hbWUubGVuZ3RoIDwgbWF4ID8gZmlsZXNbMF0ubmFtZSA6IGZpbGVzWzBdLm5hbWUuc2xpY2UoMCwgbWF4KSArICcuLi4nOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Check.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,OAAA,gBAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA,OAHA;AAMA,MAAA,IAAA,EAAA,IANA;AAOA,MAAA,KAAA,EAAA;AAPA,KAAA;AASA,GAdA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,EAAA,wBAAA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAAA,KAAA,KAAA,GAAA,6BAAA,GAAA,IAAA;AACA;AAHA,GAhBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,GADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,IAAA,CAAA,QAAA,GAAA,EAAA;AACA,gBAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AAFA;AAAA,uBAGA,gBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAHA;;AAAA;AAGA,gBAAA,KAAA,CAAA,IAAA,CAAA,QAHA;AAIA,gBAAA,KAAA,CAAA,SAAA,GAAA,KAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KANA;AAOA,IAAA,cAPA,0BAOA,GAPA,EAOA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,GAAA;AACA,KATA;AAUA,IAAA,QAVA,oBAUA,GAVA,EAUA;AAAA;;AACA,MAAA,GAAA,CAAA,cAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,KAAA,IAAA,CAAA,QAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,MAAA,gBAAA,CAAA,QAAA,CAAA,KAAA,IAAA,CAAA,QAAA,EAAA,UAAA,KAAA,EAAA,MAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,KAAA,EAAA,MAAA;;AACA,YAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,KAAA;AACA,SAFA,MAEA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,MAAA;AACA;AACA,OAPA;AAQA,KAvBA;AAwBA,IAAA,iBAxBA,6BAwBA,KAxBA,EAwBA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,GAAA,GAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,GAAA,IAAA,KAAA;AACA;AA3BA;AAtBA,CAAA","sourcesContent":["<template>\n  <div class=\"check\">\n    <b-card title=\"❓ Je vérifie un contenu\">\n        <b-card-text>\n          Je charge le fichier que je souhaite vérifier ou je précise directement son empreinte.\n        </b-card-text>\n\n        <b-form @submit=\"onSubmit\">\n\n            <b-form-group label=\"Fichier\" label-for=\"upload-file\" label-cols-sm=\"2\" label-size=\"lg\"\n              description=\"L'empreinte est calculée automatiquement\">\n              <b-form-file id=\"upload-file\" size=\"lg\"\n                v-model=\"file\" \n                placeholder=\"Choisir un fichier ou le déposer ici...\"\n                drop-placeholder=\"Déposer le fichier ici...\"\n                v-on:change=\"fileChosen\"\n                :file-name-formatter=\"fileNameFormatter\"\n              ></b-form-file>\n            </b-form-group>\n\n            <b-form-group label=\"Hashcode\" label-for=\"hashcode\" label-cols-sm=\"2\" label-size=\"lg\">\n              <b-form-input id=\"hashcode\" size=\"lg\" v-model=\"form.hashcode\" required\n                placeholder=\"Entrer le hashcode...\"\n                v-on:change=\"hashcodeChange\"\n              ></b-form-input>\n            </b-form-group>\n\n            <b-form-group label-for=\"hashcode\" label-cols-sm=\"2\">\n                <b-button-group size=\"lg\">\n                    <b-button id=\"submit\" type=\"submit\" variant=\"primary\" :title=\"needMetamask\" :disabled=\"$store.state.providerType===false || computing\">\n                      <div v-if=\"computing\"><b-spinner type=\"grow\"/> Calcul</div>\n                      <div v-else><i class=\"icon-question-sign\"/> Vérifier</div>\n                    </b-button>\n                </b-button-group>\n                <div v-if=\"error\" class=\"error\">{{error}}</div>\n            </b-form-group>\n\n            <b-form-group v-if=\"info\" label=\"Données ancrées dans la blockchain\" label-for=\"info\" label-cols-sm=\"2\" label-size=\"lg\">\n                <b-card v-if=\"info.block>0\" class=\"json-code\">\n                  <pre><code id=\"info\">{{info}}</code></pre>\n                </b-card>\n                <b-card v-if=\"info.block==0\" class=\"json-code\">\n                  <pre><code id=\"info\">Absent de la blockchain</code></pre>\n                </b-card>\n                <b-card v-if=\"typeof(info)=='string'\" class=\"json-code\">\n                  <pre><code id=\"info\">{{info}}</code></pre>\n                </b-card>\n            </b-form-group>\n        </b-form>\n    </b-card>\n  </div>\n</template>\n\n<script>\n\nimport BlckchnAntProver from '../lib/BlckchnAntProver.js'\n\nexport default {\n  name: 'Check',\n  props: {\n  },\n  data() {\n    return {\n      computing: false,\n      file: null,\n      form: {\n        hashcode: null,\n      },\n      info: null,\n      error: null\n    }\n  },\n\n  computed: {\n    needMetamask: function () {\n      return this.$store.state.providerType===false ? 'Veuillez installer Metamask' : null\n    }\n  },\n  \n  methods: {\n      async fileChosen(evt) {\n        this.form.hashcode = ''\n        this.computing = true\n        this.form.hashcode = await BlckchnAntProver.calculateHashFromFile(evt.target.files[0])\n        this.computing = false\n      },\n      hashcodeChange(evt) {\n        console.log('hashcodeChange', evt)\n      },\n      onSubmit(evt) {\n        evt.preventDefault()\n        console.log('check', this.form.hashcode)\n        this.info = null\n        this.error = null\n        BlckchnAntProver.findHash(this.form.hashcode, (error, result) => {\n          console.log('result', error, result)\n          if (error) {\n            this.error = error\n          } else {\n            this.info = result\n          }\n        })\n      },\n      fileNameFormatter(files) {\n        let max = 30\n        return files[0].name.length<max ? files[0].name : files[0].name.slice(0, max)+'...'\n      }\n    }\n}\n</script>\n\n<style scoped>\n>>> .custom-file-input ~ .custom-file-label[data-browse]::after {\n  content: 'Parcourir';\n}\n.error {\n  margin-top: 10px;\n  color: red;\n}\n.error::before {\n  content: \"⛐ \";\n}\n</style>\n"],"sourceRoot":"src/components"}]}