{"remainingRequest":"/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js!/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mohammedherrag/projet_PFA/front/src/components/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mohammedherrag/projet_PFA/front/src/components/List.vue","mtime":1624550253543},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJsY2tjaG5BbnRQcm92ZXIgZnJvbSAnLi4vbGliL0JsY2tjaG5BbnRQcm92ZXIuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xpc3QnLAogIHByb3BzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIHNjb3BlOiAnbXlvbmx5JywKICAgICAgaGFzaGVzOiBudWxsLAogICAgICBpbmZvOiBudWxsLAogICAgICBlcnJvcjogbnVsbCwKICAgICAgZmllbGRzOiBbewogICAgICAgIGtleTogJ2gnLAogICAgICAgIGxhYmVsOiAnRW1wcmVpbnRlJwogICAgICB9XSwKICAgICAgdG90YWxSb3dzOiAwLAogICAgICBwZXJQYWdlOiAxMCwKICAgICAgY3VycmVudFBhZ2U6IDEKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgbmVlZE1ldGFtYXNrOiBmdW5jdGlvbiBuZWVkTWV0YW1hc2soKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5wcm92aWRlclR5cGUgPT09IGZhbHNlID8gJ1ZldWlsbGV6IGluc3RhbGxlciBNZXRhbWFzaycgOiBudWxsOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVsb2FkOiBmdW5jdGlvbiByZWxvYWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLmluZm8gPSBudWxsOwogICAgICB0aGlzLmhhc2hlcyA9IG51bGw7CiAgICAgIHRoaXMudG90YWxSb3dzID0gMDsKICAgICAgdGhpcy5lcnJvciA9IG51bGw7CgogICAgICBpZiAodGhpcy5zY29wZSA9PSAnbXlvbmx5JykgewogICAgICAgIEJsY2tjaG5BbnRQcm92ZXIuZ2V0QWNjb3VudHMoKS50aGVuKGZ1bmN0aW9uIChhY2NvdW50cykgewogICAgICAgICAgdmFyIGFjY291bnQgPSBhY2NvdW50c1swXTsKICAgICAgICAgIEJsY2tjaG5BbnRQcm92ZXIubGlzdEJ5U2VuZGVyKGFjY291bnQsIGZ1bmN0aW9uIChlcnJvciwgcmVzdWx0KSB7CiAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgIGlmIChlcnJvcikgewogICAgICAgICAgICAgIF90aGlzLmVycm9yID0gZXJyb3I7CiAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfdGhpcy5oYXNoZXMgPSByZXN1bHQubWFwKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIGg6IGMKICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX3RoaXMudG90YWxSb3dzID0gcmVzdWx0Lmxlbmd0aDsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIEJsY2tjaG5BbnRQcm92ZXIubGlzdChmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdCkgewogICAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgIGlmIChlcnJvcikgewogICAgICAgICAgICBfdGhpcy5lcnJvciA9IGVycm9yOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXMuaGFzaGVzID0gcmVzdWx0Lm1hcChmdW5jdGlvbiAoYykgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIGg6IGMKICAgICAgICAgICAgfTsKICAgICAgICAgIH0pOwogICAgICAgICAgX3RoaXMudG90YWxSb3dzID0gcmVzdWx0Lmxlbmd0aDsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHNlbGVjdGVkOiBmdW5jdGlvbiBzZWxlY3RlZChpdGVtKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coJ3NlbGVjdGVkJywgaXRlbSk7CiAgICAgIEJsY2tjaG5BbnRQcm92ZXIuZmluZEhhc2goaXRlbVswXS5oLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdCkgewogICAgICAgIGNvbnNvbGUubG9nKCdyZXN1bHQnLCBlcnJvciwgcmVzdWx0KTsKCiAgICAgICAgaWYgKGVycm9yKSB7CiAgICAgICAgICBfdGhpczIuZXJyb3IgPSBlcnJvcjsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIF90aGlzMi5pbmZvID0gcmVzdWx0OwogICAgICB9KTsKICAgIH0sCiAgICBzY29wZUlucHV0OiBmdW5jdGlvbiBzY29wZUlucHV0KCkgewogICAgICB0aGlzLnJlbG9hZCgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"list\">\n    <b-card title=\"☰ Je consulte les empreintes\">\n      <b-card-text>\n        Je liste mes empreintes ou l'ensemble des empreintes référencées. En cliquant sur l'empreinte, j'accède au détail.\n      </b-card-text>\n\n        <b-form-group label-for=\"nothing\" label-cols-sm=\"2\">\n          <b-form-checkbox switch size=\"lg\"\n            v-on:input=\"scopeInput\"\n            id=\"scope\" v-model=\"scope\" name=\"scope\" value=\"myonly\" unchecked-value=\"all\"\n          >Mes empreintes uniquement</b-form-checkbox>\n        \n          <b-button id=\"reload\" size=\"lg\" @click=\"reload\" :title=\"needMetamask\" :disabled=\"$store.state.providerType===false || loading\">\n            <div v-if=\"loading\"><b-spinner type=\"grow\" style=\"width: 1.9rem; height: 1.9rem;\"/> Chargement</div>\n            <div v-else><i class=\"icon-repeat\"/> {{hashes?'Rec':'C'}}harger</div>\n          </b-button>\n          <div v-if=\"error\" class=\"error\">{{error}}</div>\n        </b-form-group>\n\n        <b-table v-if=\"hashes\"\n          small borderless hover selectable select-mode=\"single\"\n          :items=\"hashes\" :fields=\"fields\"\n          :per-page=\"perPage\" :current-page=\"currentPage\" @row-selected=\"selected\">\n        </b-table>\n        <b-pagination v-if=\"hashes\" v-model=\"currentPage\" :total-rows=\"totalRows\" :per-page=\"perPage\" align=center></b-pagination>\n        <b-card v-if=\"info\" class=\"json-code\">\n          <pre><code id=\"info\">{{info}}</code></pre>\n        </b-card>\n    </b-card>\n  </div>\n</template>\n\n<script>\n\nimport BlckchnAntProver from '../lib/BlckchnAntProver.js'\n\nexport default {\n  name: 'List',\n  props: {\n  },\n  data() {\n    return {\n      loading: false,\n      scope: 'myonly',\n\n      hashes: null,\n      info: null,\n      error: null,\n\n      fields: [{\n        key: 'h',\n        label: 'Empreinte'\n      }],\n      totalRows: 0,\n      perPage: 10,\n      currentPage: 1\n    }\n  },\n\n  computed: {\n    needMetamask: function () {\n      return this.$store.state.providerType===false ? 'Veuillez installer Metamask' : null\n    }\n  },\n  \n  methods: {\n    reload() {\n      this.loading = true\n      this.info = null\n      this.hashes = null\n      this.totalRows = 0\n      this.error = null\n      if (this.scope == 'myonly') {\n        BlckchnAntProver.getAccounts().then((accounts) => {\n          let account = accounts[0]\n          BlckchnAntProver.listBySender(account, (error, result) => {\n            this.loading = false\n            if (error) {\n              this.error = error\n              return\n            }\n            this.hashes = result.map(c => { return {h: c} })\n            this.totalRows = result.length\n          })\n        })\n      } else {\n        BlckchnAntProver.list((error, result) => {\n          this.loading = false\n          if (error) {\n            this.error  = error\n            return\n          }\n          this.hashes = result.map(c => { return {h: c} })\n          this.totalRows = result.length\n        })\n      }\n    },\n    selected(item) {\n      console.log('selected', item)\n      BlckchnAntProver.findHash(item[0].h, (error, result) => {\n        console.log('result', error, result)\n        if (error) {\n          this.error  = error\n          return\n        }\n        this.info = result\n      })\n    },\n    scopeInput() {\n      this.reload()\n    }\n  }\n}\n</script>\n\n<style scoped>\n#reload {\n  margin-top: 10px;\n}\n.error {\n  margin-top: 10px;\n  color: red;\n}\n.error::before {\n  content: \"⛐ \";\n}\n</style>\n"],"sourceRoot":"src/components"}]}