{"remainingRequest":"/Users/mohammedherrag/projet_PFA/front/node_modules/thread-loader/dist/cjs.js!/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js!/Users/mohammedherrag/projet_PFA/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/mohammedherrag/projet_PFA/front/src/lib/BlckchnAntProver.js","dependencies":[{"path":"/Users/mohammedherrag/projet_PFA/front/src/lib/BlckchnAntProver.js","mtime":1624562301652},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}