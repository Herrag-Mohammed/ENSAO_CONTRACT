{"remainingRequest":"/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mohammedherrag/projet_PFA/front/src/components/Upload.vue?vue&type=style&index=0&id=44fc689e&scoped=true&lang=css&","dependencies":[{"path":"/Users/mohammedherrag/projet_PFA/front/src/components/Upload.vue","mtime":1624550253543},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo+Pj4gLmN1c3RvbS1maWxlLWlucHV0IH4gLmN1c3RvbS1maWxlLWxhYmVsW2RhdGEtYnJvd3NlXTo6YWZ0ZXIgewogIGNvbnRlbnQ6ICdQYXJjb3VyaXInOwp9Ci5lcnJvciB7CiAgbWFyZ2luLXRvcDogMTBweDsKICBjb2xvcjogcmVkOwp9Ci5lcnJvcjo6YmVmb3JlIHsKICBjb250ZW50OiAi4puQICI7Cn0KLnRyYW5zYWN0aW9uIHsKICBtYXJnaW4tdG9wOiA1cHg7Cn0KLnFyY29kZSwgLmluZm8gewogIGRpc3BsYXk6IGJsb2NrOwogIGZsb2F0OiBsZWZ0OwogIHBhZGRpbmctbGVmdDogMjBweDsKfQoucXJjb2RlIHsKICBwYWRkaW5nLXRvcDogNXB4Owp9Cg=="},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"upload\">\n    \n    <b-card title=\"üìå J'ancre un contenu\">\n        <b-card-text>\n          Le fichier que je charge reste confidentiel : il doit √™tre conserv√©.\n          Son empreinte, le commentaire et mon compte sont horodat√©s.\n        </b-card-text>\n\n        <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\n\n            <b-form-group label=\"Fichier\" label-for=\"upload-file\" label-cols-sm=\"2\" label-size=\"lg\"\n              description=\"L'empreinte est calcul√©e automatiquement\">\n              <b-form-file id=\"upload-file\" size=\"lg\"\n                v-model=\"file\" :state=\"Boolean(file)\"\n                placeholder=\"Choisir un fichier ou le d√©poser ici...\"\n                drop-placeholder=\"D√©poser le fichier ici...\"\n                v-on:change=\"fileChosen\"\n                :file-name-formatter=\"fileNameFormatter\"\n              ></b-form-file>\n            </b-form-group>\n\n            <b-form-group label=\"Commentaire\" label-for=\"comment\" label-cols-sm=\"2\" label-size=\"lg\">\n              <b-form-input id=\"comment\" size=\"lg\" v-model=\"form.comment\" required\n                placeholder=\"Entrer un commentaire...\"\n              ></b-form-input>\n            </b-form-group>\n\n            <b-form-group v-if=\"form.hashcode\" label=\"Donn√©es √† ancrer dans la blockchain\" label-for=\"proof-content\" label-cols-sm=\"2\" label-size=\"lg\">\n              <b-card class=\"json-code\">\n                <pre><code id=\"proof-content\">{{form}}</code></pre>\n              </b-card>\n            </b-form-group>\n\n            <b-form-group label-for=\"btns\" label-cols-sm=\"2\">\n                <b-button-group id=\"btns\" size=\"lg\">\n                    <b-button type=\"submit\" variant=\"primary\" :title=\"needMetamask\" :disabled=\"$store.state.providerType===false || computing\">\n                      <div v-if=\"computing\"><b-spinner type=\"grow\"/> Calcul</div>\n                      <div v-else><i class=\"icon-law\"/> R√©f√©rencer</div>\n                    </b-button>\n                    <b-button type=\"reset\">R√©initialiser</b-button>\n                </b-button-group>\n                <div v-if=\"error\" class=\"error\">{{error}}</div>\n            </b-form-group>\n\n            <b-form-group v-if=\"transactionResult\" label=\"Transaction\" label-for=\"transaction-id\" label-cols-sm=\"2\" label-size=\"lg\">\n                <b-card class=\"json-code\">\n                  <pre><code id=\"transaction-id\">{{transactionResult}}</code></pre>\n                </b-card>\n                <a class=\"transaction\" v-if=\"transactionResult && transactionUrl\" :href=\"transactionUrl\" target=\"_blank\" rel=\"noopener\">\n                  <qrcode-vue className=\"qrcode\" :value=\"transactionUrl\" :foreground=\"'#2c3e50'\"></qrcode-vue>\n                </a>\n                <div v-if=\"transactionResult\" class=\"info\">Lorsqu'elles sont valid√©es, les transacions apparaissent dans le bloc \"√©v√©nements\". Veuillez r√©cup√©rer le certificat afin de le conserver avec le document.</div>\n            </b-form-group>\n        </b-form>\n    </b-card>\n  </div>\n</template>\n\n<script>\n\nimport BlckchnAntProver from '../lib/BlckchnAntProver.js'\nimport QrcodeVue from 'qrcode.vue'\n\nexport default {\n  components: {\n    QrcodeVue\n  },\n  name: 'Upload',\n  props: {\n  },\n  data() {\n    return {\n      computing: false,\n      file: null,\n      form: {\n        hashcode: null,\n        comment: null\n      },\n      transactionResult: null,\n      show: true,\n      error: null\n    }\n  },\n\n  computed: {\n    transactionUrl: function () {\n      let baseUrl = BlckchnAntProver.etherscanBaseUrl()\n      return baseUrl && this.transactionResult  ? baseUrl + '/tx/' + this.transactionResult : null\n    },\n    needMetamask: function () {\n      return this.$store.state.providerType===false ? 'Veuillez installer Metamask' : null\n    }\n  },\n  \n  methods: {\n      async fileChosen(evt) {\n        let theFile = evt.target.files[0]\n        this.form.comment = theFile.name\n        this.form.hashcode = ''\n        this.computing = true\n        this.form.hashcode = await BlckchnAntProver.calculateHashFromFile(theFile)\n        this.computing = false\n      },\n      onSubmit(evt) {\n        evt.preventDefault()\n        this.transactionResult = null\n        this.error = null\n        BlckchnAntProver.sendHash(this.form.hashcode, this.form.comment, (error, transaction) => {\n          if (error) {\n            this.error = error\n            return\n          }\n          this.transactionResult = transaction\n        })\n      },\n      onReset(evt) {\n        evt.preventDefault()\n        this.transactionResult = null\n        this.file = null\n        this.form.hashcode = null\n        this.form.comment = null\n        // Trick to reset/clear native browser form validation state\n        this.show = false\n        this.$nextTick(() => {\n          this.show = true\n        })\n      },\n      fileNameFormatter(files) {\n        let max = 50\n        return files[0].name.length<max ? files[0].name : files[0].name.slice(0, max)+'...'\n      }\n    }\n}\n</script>\n\n<style scoped>\n>>> .custom-file-input ~ .custom-file-label[data-browse]::after {\n  content: 'Parcourir';\n}\n.error {\n  margin-top: 10px;\n  color: red;\n}\n.error::before {\n  content: \"‚õê \";\n}\n.transaction {\n  margin-top: 5px;\n}\n.qrcode, .info {\n  display: block;\n  float: left;\n  padding-left: 20px;\n}\n.qrcode {\n  padding-top: 5px;\n}\n</style>\n"]}]}