{"remainingRequest":"/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mohammedherrag/projet_PFA/front/src/components/Status.vue?vue&type=style&index=0&id=0a71a5bc&scoped=true&lang=css&","dependencies":[{"path":"/Users/mohammedherrag/projet_PFA/front/src/components/Status.vue","mtime":1624998677628},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mohammedherrag/projet_PFA/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnVsIHsKICBsaXN0LXN0eWxlOm5vbmU7Cn0KLndhcm5pbmcgewogIGNvbG9yOiAjZjI5NDAwOwp9Ci53YXJuaW5nIGEgewogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Ci5lcnJvciB7CiAgY29sb3I6IHJlZDsKfQoubmV0d29ya3MgewogIHBhZGRpbmctbGVmdDogNDBweDsKfQo="},{"version":3,"sources":["Status.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Status.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"status\">\n    <b-card title=\"ðŸ“¶ Statut de connexion\">\n      <div v-if=\"$store.state.providerType=='metamask' && $store.state.provider\">\n        <ul>\n          <li>Fournisseur Metamask <span>{{$store.state.provider.isConnected() ? \"âœ“\":\"âœ—\"}}</span></li>\n          <li>Contrat : RÃ©seau  {{networkId}} /\n            <span v-if=\"!transactionUrl\">{{$store.state.contractAddress}}</span>\n            <a v-if=\"transactionUrl\" target=\"_blank\" rel=\"noopener\" :href=\"transactionUrl\">{{$store.state.contractAddress}}</a></li>\n          <li>Compte : {{contractAddress}}</li>\n          </ul>\n      </div>\n      <div v-if=\"$store.state.providerType=='http' && $store.state.provider\">\n        <ul>\n          <li>Fournisseur HTTP</li>\n          <li>Contrat : {{$store.state.provider.host}} / {{contractAddress}}</li>\n          <li class=\"warning\">Veuillez installer et configurer <a target=\"_blank\" rel=\"noopener\" href=\"https://metamask.io/\">Metamask</a> !</li>\n        </ul>\n      </div>\n      <div v-if=\"$store.state.providerType===false\">\n        <ul>\n          <li class=\"error\">Pas de Fournisseur</li>\n          <li class=\"error\">Veuillez installer et configurer <a target=\"_blank\" rel=\"noopener\" href=\"https://metamask.io/\">Metamask</a> !</li>\n        </ul>\n      </div>\n     </b-card>\n  </div>\n</template>\n\n\n<script>\nimport BlckchnAntProver from \"../lib/BlckchnAntProver.js\";\n\nexport default {\n  name: \"Status\",\n\n  data() {\n    return {};\n  },\n\n  computed: {\n    transactionUrl: function () {\n      let baseUrl = BlckchnAntProver.etherscanBaseUrl()\n      return baseUrl && this.$store.state.contractAddress  ? baseUrl + '/address/' + this.$store.state.contractAddress : null\n    },\n    networkId: function () {\n      return BlckchnAntProver.getNetworkId()\n    },\n    contractAddress: function () {\n      return BlckchnAntProver.getContractAddress()\n    }\n  },\n\n  methods: {}\n};\n</script>\n\n<style scoped>\nul {\n  list-style:none;\n}\n.warning {\n  color: #f29400;\n}\n.warning a {\n  font-weight: bold;\n}\n.error {\n  color: red;\n}\n.networks {\n  padding-left: 40px;\n}\n</style>"]}]}